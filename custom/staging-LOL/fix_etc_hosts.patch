diff --git a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
index e31f396..cb103a5 100644
--- a/dlls/ws2_32/socket.c
+++ b/dlls/ws2_32/socket.c
@@ -5537,13 +5537,13 @@ int WINAPI WS_getaddrinfo(LPCSTR nodename, LPCSTR servname, const struct WS_addr
     *res = NULL;
     if (!nodename && !servname) return WSAHOST_NOT_FOUND;
 
+    hostname = get_hostname();
+    if (!hostname) return WSA_NOT_ENOUGH_MEMORY;
+
     if (!nodename)
         node = NULL;
     else if (!nodename[0])
-    {
-        node = hostname = get_hostname();
-        if (!node) return WSA_NOT_ENOUGH_MEMORY;
-    }
+        node = hostname;
     else
         node = nodename;
 
@@ -5586,6 +5586,14 @@ int WINAPI WS_getaddrinfo(LPCSTR nodename, LPCSTR servname, const struct WS_addr
 
     /* getaddrinfo(3) is thread safe, no need to wrap in CS */
     result = getaddrinfo(node, servname, punixhints, &unixaires);
+    if (result && !strcmp(hostname, node))
+    {
+        /* If it didn't work it means the hostname IP is not in /etc/hosts, try again
+         * by sending a NULL host and avoid sending a NULL servname too because that
+         * is invalid */
+        ERR_(winediag)("Failed to resolve your hostname IP.\n");
+        result = getaddrinfo(NULL, servname ? servname : "0", punixhints, &unixaires);
+    }
 
     TRACE("%s, %s %p -> %p %d\n", debugstr_a(nodename), debugstr_a(servname), hints, res, result);
     HeapFree(GetProcessHeap(), 0, hostname);
