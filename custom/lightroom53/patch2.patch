diff -ruN wine-1.6.2.old/dlls/kernel32/file.c wine-1.6.2/dlls/kernel32/file.c
--- wine-1.6.2.old/dlls/kernel32/file.c	2014-01-10 16:47:59.166667303 +0000
+++ wine-1.6.2/dlls/kernel32/file.c	2014-01-10 16:50:32.314666548 +0000
@@ -53,6 +53,7 @@
 typedef struct
 {
     DWORD             magic;       /* magic number */
+    FINDEX_INFO_LEVELS level;      /* FindExInfoBasic or FindExInfoStandard */
     HANDLE            handle;      /* handle to directory */
     CRITICAL_SECTION  cs;          /* crit section protecting this structure */
     FINDEX_SEARCH_OPS search_op;   /* Flags passed to FindFirst.  */
@@ -1827,13 +1828,14 @@
 
     TRACE("%s %d %p %d %p %x\n", debugstr_w(filename), level, data, search_op, filter, flags);
 
-    if ((search_op != FindExSearchNameMatch && search_op != FindExSearchLimitToDirectories)
-	|| flags != 0)
+    if ((search_op != FindExSearchNameMatch && search_op != FindExSearchLimitToDirectories) ||
+        (flags & ~FIND_FIRST_EX_LARGE_FETCH))
     {
         FIXME("options not implemented 0x%08x 0x%08x\n", search_op, flags );
         return INVALID_HANDLE_VALUE;
     }
-    if (level != FindExInfoStandard)
+
+    if (level > FindExInfoBasic)
     {
         FIXME("info level %d not implemented\n", level );
         return INVALID_HANDLE_VALUE;
@@ -1936,6 +1938,7 @@
     info->data_size = 0;
     info->data      = NULL;
     info->search_op = search_op;
+    info->level     = level;
 
     if (device)
     {
@@ -2098,10 +2101,14 @@
 
         memcpy( data->cFileName, dir_info->FileName, dir_info->FileNameLength );
         data->cFileName[dir_info->FileNameLength/sizeof(WCHAR)] = 0;
-        memcpy( data->cAlternateFileName, dir_info->ShortName, dir_info->ShortNameLength );
-        data->cAlternateFileName[dir_info->ShortNameLength/sizeof(WCHAR)] = 0;
 
-        TRACE("returning %s (%s)\n",
+        if (info->level != FindExInfoBasic) {
+            memcpy( data->cAlternateFileName, dir_info->ShortName, dir_info->ShortNameLength );
+            data->cAlternateFileName[dir_info->ShortNameLength/sizeof(WCHAR)] = 0;
+        } else
+            data->cAlternateFileName[0] = 0;
+
+       TRACE("returning %s (%s)\n",
               debugstr_w(data->cFileName), debugstr_w(data->cAlternateFileName) );
 
         ret = TRUE;
diff -ruN wine-1.6.2.old/include/winbase.h wine-1.6.2/include/winbase.h
--- wine-1.6.2.old/include/winbase.h	2014-01-10 16:47:59.074667304 +0000
+++ wine-1.6.2/include/winbase.h	2014-01-10 16:51:45.942666185 +0000
@@ -283,9 +283,14 @@
 typedef enum _FINDEX_INFO_LEVELS
 {
 	FindExInfoStandard,
+	FindExInfoBasic,
 	FindExInfoMaxInfoLevel
 } FINDEX_INFO_LEVELS;
 
+/* flags for FindFirstFileEx */
+#define FIND_FIRST_EX_CASE_SENSITIVE 0x1
+#define FIND_FIRST_EX_LARGE_FETCH    0x2
+
 typedef enum _FINDEX_SEARCH_OPS
 {
 	FindExSearchNameMatch,
